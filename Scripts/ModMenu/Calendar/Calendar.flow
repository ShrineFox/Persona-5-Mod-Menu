import("../../Utilities/Utilities.flow");
import("Calendar.msg");

void CalendarMenu()
{
    while (true && !PAD_CHK_PRESS(PadButton.L2))
    {
        int selection = DescriptionMenu(Title_Calendar, Options_Calendar);
        switch (selection)
        {
            case -1:
                return;
            case 0:
                CalendarSetNextDaySelect();
                break;
            case 1:
                CallCalendar();
                return;
            case 2:
                ChangeWeather();
                break;
            case 3:
                LoopCurrentTime();
                break;
        }
    }
}

void CalendarSetNextDaySelect()
{
    int month = NameMenu(Title_CalendarMonth, Options_CalendarMonth) + 1;
    if (month <= 0)
        return;

    int day = NumberMenu(2, Title_Day);
    if (day <= 0)
        return;

    // Verify that the day doesn't exceed the number of possible days in the specified month
    int daysInMonth = 0;
    if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)
    {
        daysInMonth = 31;
    }
    else if (month == 2)
    {
        daysInMonth = 29;
    }
    else if (month == 4 || month == 6 || month == 9 || month == 11)
    {
        daysInMonth = 30;
    }

    if (day > daysInMonth)
    {
        SystemMessage(Message_CalendarInvalidDay);
        return;
    }

    int thisMonth = GET_MONTH();
    int thisDay = GET_DAY();
	
	if (month >= 1 && month <= 3)
	{
		month += 12;
	}

    SET_NEXT_DAY(month, day, 0);
}

void CallCalendar()
{
    CalendarFade();

    // Disable calendar animation to allow going back multiple days
    BIT_OFF(Flag.Section5 + 17);

    CALL_CALENDAR();

    // Re-enable the animation
    BIT_ON(Flag.Section5 + 17);
}

void LoopCurrentTime()
{
    SET_NEXT_DAY(GET_MONTH(), GET_DAY(), GET_TIME());
}

void ChangeWeather()
{
    int selection = NameMenu(Title_Weather, Options_Weather);

    if (selection != -1)
    {
        CLEAR_WEATHER();
        PUSH_WEATHER(selection);
        POP_WEATHER();
    }
}

void CalendarFade()
{
    FADEOUT(15, 10);
    FADE_SYNC();
}